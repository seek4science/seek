language: ruby

cache: bundler

jdk:
  - openjdk8

services:
  - docker
  - mysql
  - postgresql
  - xvfb

sudo: false

env:
  - SUITE="rails test test/unit" DB_TYPE=mysql
  - SUITE="rails test test/unit" DB_TYPE=sqlite3
  - SUITE="rails test test/unit" DB_TYPE=postgres
  - SUITE="rails test test/functional" DB_TYPE=mysql
  - SUITE="rails test test/integration" DB_TYPE=mysql
  - SUITE="rspec spec" DB_TYPE=mysql
  # SUITE="rake teaspoon" RAILS_ENV=test DB_TYPE=mysql
  - SUITE="rake assets:precompile RAILS_ENV=production" DB_TYPE=mysql
  - SUITE="rake db:setup RAILS_ENV=production" DB_TYPE=mysql

before_install:
  # starts up a virtuoso docker repository and sets up the config to use it, for the rdf repository related integration tests
  - sh -c "if [ '$SUITE' = 'rails test test/integration' ]; then sh -e script/virtuoso-docker-for-travis.sh; fi"

before_script:
  - sh -c "if [ '$DB_TYPE' = 'pgsql' ]; then psql -c 'create database travis_ci_test; create database travis_ci_dev; create database travis_ci_prod;' -U postgres; fi"
  - cp test/database.travis.$DB_TYPE.yml config/database.yml
  - RAILS_ENV=test bundle exec rake db:create
  - RAILS_ENV=test bundle exec rake db:schema:load
  - sh -c "if [ '$SUITE' = 'rake assets:precompile RAILS_ENV=production' ]; then RAILS_ENV=production bundle exec rake db:create; fi"
  - sh -c "if [ '$SUITE' = 'rake assets:precompile RAILS_ENV=production' ]; then RAILS_ENV=production bundle exec rake db:schema:load; fi"

script: bundle exec $SUITE

notifications:
  slack:
    secure: fK3kbDHg/kwFCjxhFkg0wkOcwXoFwkfJJdRFwZQtnMDkY4yHNtr9SWIHWOiI9OceNgWLeHwvvm/7737WBWnTf4RF3mn0/D9xYtOn+DfV2gb1xXVjDb33oBQWrFN8P1x4xFNOMw38LQ46NYvsv6bfPmZRJpKuvHPVJUsBCINx14w=
