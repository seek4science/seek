---
http_interactions:
- request:
    method: get
    uri: https://fair-dom.org/news.xml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '29280'
      Server:
      - GitHub.com
      Content-Type:
      - application/xml
      Last-Modified:
      - Tue, 09 May 2023 06:49:49 GMT
      Access-Control-Allow-Origin:
      - "*"
      Etag:
      - W/"6459ed0d-7260"
      Expires:
      - Thu, 18 May 2023 14:50:34 GMT
      Cache-Control:
      - max-age=600
      X-Proxy-Cache:
      - MISS
      X-Github-Request-Id:
      - 45DC:903D:F33EAD:FB3B2B:646638D3
      Accept-Ranges:
      - bytes
      Date:
      - Thu, 18 May 2023 14:54:17 GMT
      Via:
      - 1.1 varnish
      Age:
      - '0'
      X-Served-By:
      - cache-lon4254-LON
      X-Cache:
      - HIT
      X-Cache-Hits:
      - '1'
      X-Timer:
      - S1684421657.207667,VS0,VE125
      Vary:
      - Accept-Encoding
      X-Fastly-Request-Id:
      - 12e3e4772842348598159db527ec0664f14c8742
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 18 May 2023 14:54:19 GMT
recorded_with: VCR 2.9.3
