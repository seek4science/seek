<% icon_view ||= false %>

<% asset = content_blob.asset %>
<% if Seek::Util.inline_viewable_content_types.include?(asset.class) %>
  <% if content_blob.is_content_viewable? %>
    <%#FIXME: this decision of whether to display image can be made in view_content controller method, as it does between text and pdf %>
    <% if content_blob.is_image? %>
      <% zoom_width = content_blob.width.to_i.clamp(Seek::ActsAsFleximageExtension::STANDARD_SIZE,
                                                    Seek::ActsAsFleximageExtension::MAX_SIZE) %>
      <%#param code is used for temporary link %>
      <% url = polymorphic_path([asset, content_blob], action: 'download', disposition: 'inline', code: params[:code], image_size: zoom_width) %>
      <%# lightbox ID needs to be unique %>
      <% options = { 'data-lightbox' => "view_content_blob_#{content_blob.id}_#{Time.now.to_i}_#{rand(10000000)}", :title => 'Preview'} %>
    <% else %>
        <% url = polymorphic_path([asset, content_blob], :action => 'view_content', :code => params[:code]) %>
        <% options = { :title => 'View contents of this file' } %>
    <% end %>

    <% if url && options %>
      <% if icon_view %>
        <%= link_to(image('show'), url, options) %>
      <% else %>
        <%= button_link_to('View content', "show", url, options) %>
      <% end %>
    <% end %>
  <% elsif !asset.is_a?(Model) && asset.is_downloadable_asset? %>
    <% if content_blob.file_exists? %>
      <% explanation = "This #{text_for_resource(asset).downcase} is unable to be viewed in-browser. " +
          "Supported file formats are: " + Seek::ContentTypeDetection.viewable_formats.join(', ') %>
    <% else %>
      <% explanation = "This content is stored externally and cannot be previewed." %>
    <% end %>
    <%= render partial:'assets/disabled_view_content_button', locals:{icon_view:icon_view, explanation:explanation} %>
  <% end %>
<% end %>
