<%
  items_not_in_isa_hash = SharingPermissionsHelper::ITEMS_NOT_IN_ISA_HASH
  items_not_in_isa_hash[:children] =[]

  all_investigations_hash = SharingPermissionsHelper::ALL_INVESTIGATIONS_HASH
  all_investigations_hash[:children] = []

  #include items which can change sharing permissions, the 'publication' is intendedly excluded.
  all_related_items_hash = get_related_resources(current_user.person).slice(*Seek::Util.authorized_types.map(&:name)).except!('Publication')

  items_not_in_isa = filter_items_not_in_ISA(all_related_items_hash)

  @policy_params = params[:policy_attributes]

%>

<div class="show_basic">
  <%= show_title "Change permissions of items related to #{link_to(h(current_user.person.name),current_user.person)} in batch".html_safe -%>
</div>

<div class="alert alert-info">
  <ul>
    <li>Items are grouped to those included and those not included in the <b>ISA (Investigation-Study-Assay) structure</b>.</li>
    <li>The item list excludes <b>Project</b>, <b>Institution</b> and <b>Publication</b> since these are always publicly visible</li>
    <li>You can view current permissions of each item by clicking the item's name.</li>
    <li>After your confirmation, the newly modified permissions will be highlighted with <span class="sharing_permission_changed"></span>  .</li>
  </ul>
</div>

<div id="sharing_items">
<%= form_tag({:action => :batch_change_permssion_for_selected_items}, :method => :post) do -%>

  <%= folding_panel("Items not in ISA", false, :id => 'not_isa_item', :body_options => {:id => 'items_fold_content'},
                    :help_text => nil) do %>

    <label><%= link_to "Select All", "#", id: "select_all_not_isa" -%></label> |
    <label><%= link_to "Deselect All", "#", id: "deselect_all_not_isa" -%></label> |
    <label><%= link_to "Expand All", "#", id: "expand_all_not_isa" -%></label> |
    <label><%= link_to "Collapse All", "#", id: "collapse_all_not_isa" -%></label>


    <% items_not_in_isa.each do |resource_type, resource_items| %>
      <% asset_node= asset_node_json(resource_type, resource_items) %>
      <% items_not_in_isa_hash[:children].append(asset_node) %>
    <% end %>

    <div id="jstree_not_isa"></div>

  <% end %>


  <% all_related_items_hash.each do |resource_type, resource_items| %>
    <% if resource_type == "Investigation" %>
      <%  resource_items[:items].each do |item| %>
        <% options ||= { depth: 4, parent_depth: nil, sibling_depth: nil, include_self: true } %>
        <%  hash = Seek::IsaGraphGenerator.new(item).generate(options) %>
        <% tree = JSON.parse(build_tree_json(hash, item)) %>
        <% tree = add_permissions_to_tree_json (tree) %>
        <% investigation_tree =  eval(tree.join) %>
        <% all_investigations_hash[:children].append (investigation_tree) %>
      <% end %>
    <% end %>
  <% end %>

  <%= folding_panel("Items in ISA: ", false, :id => 'isa_item', :body_options => {:id => 'items_fold_content'},
                    :help_text => nil) do %>

    <label><%= link_to "Select All", "#", id: "select_all_isa" -%></label> |
    <label><%= link_to "Deselect All", "#", id: "deselect_all_isa" -%></label> |
    <label><%= link_to "Expand All", "#", id: "expand_all_isa" -%></label> |
    <label><%= link_to "Collapse All", "#", id: "collapse_all_isa" -%></label>

    <div id="jstree"></div>

  <% end -%>

  <% resource = (controller_name == 'people') ? current_user.person : @asset %>

  <%= submit_tag "Next", data: {disable_with: 'Next'}, :class => 'btn btn-primary' -%>

  or
  <%= cancel_button(resource) %>

  <div id="hiddencheckboxs"></div>

<% end -%>
</div>

<script type="text/javascript">

    function addCheckboxToAssetNode(asset,asset_id,is_isa){
        var container = $j('#hiddencheckboxs');
        var inputs = container.find('input');
        var id = inputs.length+1;
        $j('<input />', { type: 'checkbox', name: is_isa+'['+asset+']['+asset_id+']', id: is_isa+'_'+asset+'_'+asset_id, value: 1,class: asset+'_'+asset_id+' '+is_isa, checked: false}).appendTo(container);
    }

    $j(document).ready(function () {

        $j('#select_all_not_isa').click(function (event) {
            event.preventDefault();
            $j('input[name^="share_not_isa"]').prop("checked", true);
            $j("#jstree_not_isa").jstree().check_all(true);
        });

        $j('#deselect_all_not_isa').click(function (event) {
            event.preventDefault();
            $j('input[name^="share_not_isa"]').prop("checked", false);
            $j("#jstree_not_isa").jstree().uncheck_all(true);
        });
        $j('#expand_all_not_isa').click(function (event) {
            event.preventDefault();
            $j("#jstree_not_isa").jstree("open_all");
            $j("#jstree_not_isa").find('[id^="Permission-"]').removeClass('hide_permission')

        });
        $j('#collapse_all_not_isa').click(function (event) {
            event.preventDefault();
            $j("#jstree_not_isa").find('[id^="Permission-"]').addClass('hide_permission')

        });

        $j('#select_all_isa').click(function (event) {
            $j('input[name^="share_isa"]').prop("checked", true);
            $j("#jstree").jstree().check_all(true);
            event.preventDefault();

        });

        $j('#deselect_all_isa').click(function (event) {
            $j('input[name^="share_isa"]').prop("checked", false);
            $j("#jstree").jstree().uncheck_all(true);
            event.preventDefault();

        });
        $j('#expand_all_isa').click(function (event) {
            event.preventDefault();
            $j("#jstree").jstree("open_all");
            $j('#jstree').find(('[id^="Permission-"]')).removeClass('hide_permission')

        });
        $j('#collapse_all_isa').click(function (event) {
            event.preventDefault();
            $j('#jstree').find(('[id^="Permission-"]')).addClass('hide_permission')

        });
    });

    $j(document).ready(function () {

        $j('#jstree_not_isa').on('loaded.jstree', function (event, data) {
            // expand all nodes
            $j("#jstree_not_isa").jstree("open_all");
            if (<%= @batch_sharing_permission_changed %>){
                $j('#jstree_not_isa').find(('[id^="Permission-"]')).removeClass('hide_permission')
            }

            var $tree = $j(this);
            $j($tree.jstree().get_json($tree, {
                flat: true
            }))
                .each(function(index, value) {

                    var node = $j("#jstree").jstree().get_node(this.id);
                    var asset = this.id.split('-')[0]
                    var asset_id = this.id.split('-')[1]
                    if ((index!= 0) && (asset!= "Permission") && (asset_id)!= "not_isa"){
                        addCheckboxToAssetNode(asset,asset_id,'share_not_isa');
                    }

                });
        })
            .jstree({
                'core': {
                    'multiple' : true,
                    "check_callback": true,
                    "themes": {
                        "variant": "large",
                        "dots": false
                    },

                    'data':  <%= items_not_in_isa_hash.to_json.html_safe -%>

                },
                "checkbox" : {
                    "three_state" : false,
                    "whole_node" : false,
                    "tie_selection" : false
                },
                "plugins" : [ "checkbox" ,"changed","json_data"]
            }).on("check_node.jstree uncheck_node.jstree", function(e, data) {

            var asset = data.node.id.split('-')
            var asset_id = 'share_not_isa_'+asset[0]+'_'+asset[1]

            if  ($j('input[id="'+asset_id+'"]').prop('checked') ){
                $j('input[id="'+asset_id+'"]').prop("checked", false);
            } else {
                $j('input[id="'+asset_id+'"]').prop("checked", true);
            }

        }).on("select_node.jstree", function (e, data) {
            var asset = data.node.id.split('-')
            var Permission_id = 'Permission-'+asset[0]+'-'+asset[1]
            var selector = $j('[id^='+Permission_id+']')
            if (selector.hasClass ("hide_permission")){
                selector.removeClass('hide_permission')
            }else{
                selector.addClass('hide_permission')
            }
        });

    });

    $j(document).ready(function () {

        $j('#jstree').on('loaded.jstree', function (event, data) {
            // expand all nodes
            $j("#jstree").jstree("open_all");

            if (<%= @batch_sharing_permission_changed %>){
                $j('#jstree').find(('[id^="Permission-"]')).removeClass('hide_permission')
            }

            var $tree = $j(this);
            $j($tree.jstree().get_json($tree, {
                flat: true
            }))
                .each(function(index, value) {
                    var node = $j("#jstree").jstree().get_node(this.id);
                    var asset = this.id.split('-')[0]
                    var asset_id = this.id.split('-')[1]

                    if ((index!= 0) && (asset!= "Permission")) {
                        addCheckboxToAssetNode(asset,asset_id,'share_isa');
                    }
                });

        })
            .jstree({
                'core': {
                    'multiple' : true,
                    "check_callback": true,
                    "themes": {
                        "variant": "large",
                        "dots": false
                    },

                    'data':  <%= all_investigations_hash.to_json.html_safe -%>

                },
                "checkbox" : {
                    "three_state" : false, // to avoid that fact that checking a node also check others
                    "whole_node" : false,  // to avoid checking the box just clicking the node
                    "tie_selection" : false // for checking without selecting and selecting without checking
                },
                "plugins" : [ "checkbox" ,"changed","json_data"]
            }).on("check_node.jstree uncheck_node.jstree", function(e, data) {

            var asset = data.node.id.split('-')
            var asset_id = 'share_isa_'+asset[0]+'_'+asset[1]

            if  ($j('input[id="'+asset_id+'"]').prop('checked') ){
                $j('input[id="'+asset_id+'"]').prop("checked", false);
            } else {
                $j('input[id="'+asset_id+'"]').prop("checked", true);
            }

        }).on("select_node.jstree", function (e, data) {

            var asset = data.node.id.split('-')
            var Permission_id = 'Permission-'+asset[0]+'-'+asset[1]
            var selector = $j('[id^='+Permission_id+']')
            if (selector.hasClass ("hide_permission")){
                selector.removeClass('hide_permission')
            }else{
                selector.addClass('hide_permission')
            }
        });

    });
</script>

