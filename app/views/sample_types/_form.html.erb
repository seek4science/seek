<% tab ||= 'manual' %>

<span id='modal-dialogues'>
    <%= sample_controlled_vocab_model_dialog('cv-modal') %>
</span>

<%= form_for(@sample_type, html: { multipart: true }) do |f| %>
    <%= f.error_messages %>

    <div class="form-group">
      <label>Title</label><%= required_span %>
      <%= f.text_field :title, class: 'form-control', placeholder: 'Sample type name' %>
    </div>

    <div class="form-group">
      <label>Description</label>
      <%= f.text_area :description, class: "form-control rich-text-edit", rows: 5 -%>
    </div>

    <%= render partial: "projects/project_selector", locals: { resource: @sample_type } -%>

    <div class="tab-content">
      <div role="tabpanel" class="tab-pane<%= ' active'.html_safe if tab == 'manual' -%>" id="manual">
        <div class="form-group">
          <%= f.label :tags -%>
          <%= tags_input('sample_type[tags]', @sample_type.tags, typeahead: {type: 'sample_type_tag'}, class:'form-control') %>
        </div>

        <%= render partial: "assets/author_form", locals: { form: f } -%>

        <h3>Attributes</h3>
        <p class="help-block">Re-arrange attributes by clicking and dragging the button on the left-hand side of each row.</p>
        <table class="table" id="attribute-table">
          <thead>
          <tr>
            <th width="5em">Order</th>
            <th>Name<%= required_span %></th>
            <th width="5em">Required?</th>
            <th width="5em">Title?</th>
            <th>Type<%= required_span %></th>
            <th>Description</th>
            <th>Persistent ID <%= sample_attribute_pid_help_icon %></th>
            <th>Unit</th>
          </tr>
          </thead>
          <tbody>
          <% @sample_type.sample_attributes.each_with_index do |sample_attribute, index| %>
              <%= render partial: 'sample_attribute_form', locals: { index: index,
                                                                           sample_attribute: sample_attribute,
                                                                           sample_type: @sample_type,
                                                                           display_isa_tag: false } %>
          <% end %>

          <% unless @sample_type.uploaded_template? || !@sample_type.editing_constraints.allow_new_attribute? %>
              <tr id="add-attribute-row">
                <td colspan="6">
                  <%= button_link_to('Add new attribute', 'add', '#', id: 'add-attribute') %>
                </td>
              </tr>
          <% end %>
          </tbody>
        </table>
      </div>

      <% if @sample_type.new_record? %>
          <div role="tabpanel" class="tab-pane<%= ' active'.html_safe if tab == 'from-template' -%>" id="from-template">
            <div class="form-group">
              <label class="required">File to upload</label>
              <%= file_field_tag "content_blobs[][data]", { "data-batch-upload": false } -%>
            </div>
          </div>
      <% end %>
    </div>

    <p class="actions">
      <%= f.submit (@sample_type.new_record? ? 'Create' : 'Update'), class: 'btn btn-primary' %>
      or
      <%= cancel_button(@sample_type.new_record? ? sample_types_path : sample_type_path(@sample_type)) %>
    </p>
<% end %>

<table id="new-attribute-row" style="display: none">
  <tbody>
    <%= render partial: 'sample_attribute_form', locals: { sample_type: @sample_type,
                                                                display_isa_tag: false } %>
  </tbody>
</table>

<script>
    //used to hold the element Id that needs updating after creating a new CV
    $j(document).ready(function () {
        SampleTypeControlledVocab.copyBlankModalForm();
        SampleTypeControlledVocab.resetModalControlledVocabForm();
        // Make rows sortable
        SampleTypes.bindSortable();
        SampleTypes.recalculatePositions();

        $j('#add-attribute').click(function () {
            var newRow = $j('#new-attribute-row tbody').clone().html();
            var index = 0;
            $j('#attribute-table tr.sample-attribute').each(function () {
                var newIndex = parseInt($j(this).data('index'));
                if (newIndex > index) {
                    index = newIndex;
                }
            });
            index++;
            newRow = newRow.replace(/replace-me/g, index);
            SampleTypes.unbindSortable();
            $j('#attribute-table #add-attribute-row').before($j(newRow));
            SampleTypes.recalculatePositions();
            SampleTypes.bindSortable();
            return false;
        });

        $j('#attribute-table').on('change', '.destroy-attribute', SampleTypes.removeAttribute);
        $j('#attribute-table').on('change', '.sample-type-is-title', SampleTypes.singleIsTitle);
        $j('#attribute-table').on('change', '.sample-type-attribute-type', SampleTypes.attributeTypeChanged);
        $j('#attribute-table').on('change', '.controlled-vocab-selection', SampleTypeControlledVocab.controlledVocabChanged);
        $j('#attribute-table .sample-type-attribute-type').trigger("change", [false]);
				$j('.controlled-vocab-selection').change();
    });
</script>
