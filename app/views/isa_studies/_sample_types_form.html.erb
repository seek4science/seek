<% attribute_table_id = "attribute-table" + id_suffix %>
<% add_attribute_id = 'add-attribute' + id_suffix %>
<% new_attribute_id = 'new-attribute-row' + id_suffix %>
<% add_attribute_row_id = 'add-attribute-row' + id_suffix %>
<% main_field_name = id_suffix[1..-1] %>
<% isa_element ||= "study" %>

<%=  f.fields_for main_field_name, sample_type do |field| %>

	<% unless action == :edit %>
    <%= folding_panel("Choose a #{t(:template)} to create a #{t(:sample_type)}", false, {help_text: "Create #{t(:template)} based on existing #{t(:template).pluralize()}", :body_options => {:id => 'add_custom_attribute_panel'}}) do %>
      <input type="button" value="Existing <%= t(:template).pluralize%>" class="btn btn-primary" onClick="initTemplateModal('<%=main_field_name%>')">
    <% end %>
	<% end %>

  <div class="form-group">
      <label>Title</label><%= required_span %>
      <%= field.text_field :title, :class => 'form-control', :placeholder => 'Sample type name' %>
  </div>

  <div class="form-group">
    <label>Description</label>
    <%= field.text_area :description, :class=>"form-control rich-text-edit", :rows => 5 -%>
  </div>

  <%= field.hidden_field :template_id, { id: "isa_study#{id_suffix}template_parent_id" } %>

  <div class="tab-content">
    <div role="tabpanel" class="tab-pane active">
			<h3>Attributes</h3>
			<p class="help-block">Re-arrange attributes by clicking and dragging the button on the left-hand side of each row.</p>
			<table class="table" id=<%=attribute_table_id%> >
				<thead>
					<tr>
						<th width="5em">Order</th>
						<th>Name<%= required_span %></th>
						<th width="5em">Required?</th>
						<th width="5em">Title?</th>
						<th>Type<%= required_span %></th>
						<th>Description</th>
            <th>PID <%= help_icon(t('samples.pid_info_text')) %> </th>
            <th>ISA Tag<%= required_span %> <%= help_icon(t('templates.isa_tag_info_text')) %></th>
						<th>Unit</th>
					</tr>
				</thead>
				<tbody>
					<% sample_type.sample_attributes.each_with_index do |sample_attribute, index| %>
							<%= render :partial => 'sample_types/sample_attribute_form', :locals => { :index => index,
                                                                                        :sample_attribute => sample_attribute,
                                                                                        :sample_type=>sample_type,
                                                                                        :prefix => "isa_#{isa_element}[#{main_field_name}]",
                                                                                        :display_isa_tag => true } %>
					<% end %>

					<% unless sample_type.uploaded_template? || !sample_type.editing_constraints.allow_new_attribute? %>
							<tr id=<%=add_attribute_row_id%> >
								<td colspan="6">
									<%= button_link_to('Add new attribute', 'add', '#', :id => add_attribute_id  ) %>
								</td>
							</tr>
					<% end %>
				</tbody>
			</table>
		</div>
  </div>

<% end -%>

<table id=<%=new_attribute_id%> style="display:none">
  <tbody>
    <%= render :partial => 'sample_types/sample_attribute_form', :locals=> { sample_type:sample_type,
                                                                             prefix: "isa_#{isa_element}[#{main_field_name}]",
                                                                             display_isa_tag: true } %>
  </tbody>
</table>

<script>
    //used to hold the element Id that needs updating after creating a new CV
    $j(document).ready(function () {
        SampleTypeControlledVocab.blankControlledVocabModelForm=$j('#cv-modal').clone();
        SampleTypeControlledVocab.resetModalControlledVocabForm();
        // Make rows sortable
        SampleTypes.bindSortable("#<%=attribute_table_id%>");
        SampleTypes.recalculatePositions("#<%=attribute_table_id%>");

        $j("#<%=add_attribute_id%>").click(function () {
            var newRow = $j("#<%=new_attribute_id%> tbody").clone().html();
            var index = 0;
            $j("#<%=attribute_table_id%> tr.sample-attribute").each(function () {
                var newIndex = parseInt($j(this).data('index'));
                if (newIndex > index) {
                    index = newIndex;
                }
            });
            index++;
            newRow = newRow.replace(/replace-me/g, index);
            SampleTypes.unbindSortable("#<%=attribute_table_id%>");
            $j("#<%=attribute_table_id%> #<%=add_attribute_row_id%>").before($j(newRow));
            SampleTypes.recalculatePositions("#<%=attribute_table_id%>");
            SampleTypes.bindSortable("#<%=attribute_table_id%>");
            return false;
        });

        $j("#<%=attribute_table_id%>").on('change', '.destroy-attribute', SampleTypes.removeAttribute);
        $j("#<%=attribute_table_id%>").on('change', '.sample-type-is-title', SampleTypes.singleIsTitle);
        $j("#<%=attribute_table_id%>").on('change', '.sample-type-attribute-type', SampleTypes.attributeTypeChanged);
        $j("#<%=attribute_table_id%>").on('change', '.controlled-vocab-selection', SampleTypeControlledVocab.controlledVocabChanged);
        $j('.controlled-vocab-selection').change();

        // Change ISA tag ID of the study source when the select is changed
        $j('#attribute-table_source_sample_type').on('change', 'select[data-attr="isa_tag_title"]', function() {
            const hiddenInputName = $j(this).attr('name').replace('isa_tag_title', 'isa_tag_id');
            const isa_tag_id_sel = $j(this).val();

            $j(`input:hidden[name="${hiddenInputName}"]`).val(isa_tag_id_sel);

        });

        // Change ISA tag ID of the study sample when the select is changed
        $j('#attribute-table_sample_collection_sample_type').on('change', 'select[data-attr="isa_tag_title"]', function() {
            const hiddenInputName = $j(this).attr('name').replace('isa_tag_title', 'isa_tag_id');
            const isa_tag_id_sel = $j(this).val();

            $j(`input:hidden[name="${hiddenInputName}"]`).val(isa_tag_id_sel);

        });

        // Change ISA tag ID of the assay sample when the select is changed
        $j('#attribute-table_sample_type').on('change', 'select[data-attr="isa_tag_title"]', function() {
            const hiddenInputName = $j(this).attr('name').replace('isa_tag_title', 'isa_tag_id');
            const isa_tag_id_sel = $j(this).val();

            $j(`input:hidden[name="${hiddenInputName}"]`).val(isa_tag_id_sel);

        });

        // Disable select ISA tags of existing attributes
        $j('#attribute-table_source_sample_type').find('tr.sample-attribute [data-attr="isa_tag_title"]').attr('disabled', true);
        $j('#attribute-table_sample_collection_sample_type').find('tr.sample-attribute [data-attr="isa_tag_title"]').attr('disabled', true);

        // Filter ISA tags for new rows
        updateIsaTagSelect("study source", "#new-attribute-row_source_sample_type");
        updateIsaTagSelect("study sample", "#new-attribute-row_sample_collection_sample_type");
        updateIsaTagSelect("assay - material", "#new-attribute-row_sample_type");
        updateIsaTagSelect("assay - data file", "#new-attribute-row_sample_type");
    });
    $j(document).on('submit', function(){
      // Remove the table from the form
      $j("#<%=new_attribute_id%>").remove()
      return true
    });
</script>
